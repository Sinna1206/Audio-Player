{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\beat-box\\\\src\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport Status from './Status';\nimport PlayPauseButton from './PlayPauseButton';\nimport PrevButton from './PrevButton';\nimport NextButton from './NextButton';\nimport ShuffleButton from './ShuffleButton';\nimport audioData from './audio.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [tracks, setTracks] = useState(audioData.tracks);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [statusMessage, setStatusMessage] = useState('Paused');\n  useEffect(() => {\n    if (tracks.length > 0 && currentTrackIndex < tracks.length) {\n      const currentTrack = tracks[currentTrackIndex];\n      setStatusMessage(`Playing: ${currentTrack.title || currentTrack.episodeTitle}`);\n    }\n  }, [currentTrackIndex, tracks]);\n  const shuffleTracks = () => {\n    setTracks(prevTracks => {\n      let shuffled = [...prevTracks];\n      for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n      }\n      setCurrentTrackIndex(0);\n      setIsPlaying(true);\n      return shuffled;\n    });\n  };\n  const handleTrackDoubleClick = index => {\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n    const track = tracks[index];\n    const title = track.title || track.episodeTitle;\n    setStatusMessage(`Playing: ${title}`);\n  };\n  const handlePrev = () => {\n    const newIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length;\n    setCurrentTrackIndex(newIndex);\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\n  };\n  const handleNext = () => {\n    const newIndex = (currentTrackIndex + 1) % tracks.length;\n    setCurrentTrackIndex(newIndex);\n    setIsPlaying(true);\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    setStatusMessage(isPlaying ? 'Paused' : `Playing: ${tracks[currentTrackIndex].title || tracks[currentTrackIndex].episodeTitle}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(ShuffleButton, {\n        onShuffle: shuffleTracks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n        onPrev: handlePrev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayPauseButton, {\n        isPlaying: isPlaying,\n        onTogglePlay: togglePlayPause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onNext: handleNext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Status, {\n      statusMessage: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist-grid\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"track-title\",\n        className: `playlist-item ${currentTrackIndex === index ? 'active' : ''}`,\n        onDoubleClick: () => handleTrackDoubleClick(index),\n        children: track.artist ? /*#__PURE__*/_jsxDEV(Song, {\n          ...track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Podcast, {\n          ...track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"tsp54FRr1CB7UUjSSrI6frN0NeE=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","Song","Podcast","Status","PlayPauseButton","PrevButton","NextButton","ShuffleButton","audioData","jsxDEV","_jsxDEV","Playlist","_s","tracks","setTracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","statusMessage","setStatusMessage","length","currentTrack","title","episodeTitle","shuffleTracks","prevTracks","shuffled","i","j","Math","floor","random","handleTrackDoubleClick","index","track","handlePrev","newIndex","handleNext","togglePlayPause","children","className","onShuffle","fileName","_jsxFileName","lineNumber","columnNumber","onPrev","onTogglePlay","onNext","map","onDoubleClick","artist","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/beat-box/src/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Song from './Song'; \r\nimport Podcast from './Podcast'; \r\nimport Status from './Status';\r\nimport PlayPauseButton from './PlayPauseButton'; \r\nimport PrevButton from './PrevButton'; \r\nimport NextButton from './NextButton'; \r\nimport ShuffleButton from './ShuffleButton';\r\nimport audioData from './audio.json';\r\n\r\nconst Playlist = () => {\r\n  const [tracks, setTracks] = useState(audioData.tracks);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0); \r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [statusMessage, setStatusMessage] = useState('Paused');\r\n\r\n  useEffect(() => {\r\n    if (tracks.length > 0 && currentTrackIndex < tracks.length) {\r\n        const currentTrack = tracks[currentTrackIndex];\r\n        setStatusMessage(`Playing: ${currentTrack.title || currentTrack.episodeTitle}`);\r\n    }\r\n}, [currentTrackIndex, tracks]);\r\n\r\n  const shuffleTracks = () => {\r\n    setTracks(prevTracks => {\r\n      let shuffled = [...prevTracks];\r\n      for (let i = shuffled.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n      }\r\n      setCurrentTrackIndex(0); \r\n      setIsPlaying(true);\r\n      return shuffled;\r\n    });\r\n};\r\n\r\n  const handleTrackDoubleClick = (index) => {\r\n    setCurrentTrackIndex(index);\r\n    setIsPlaying(true);\r\n    const track = tracks[index];\r\n    const title = track.title || track.episodeTitle;\r\n    setStatusMessage(`Playing: ${title}`);\r\n  };\r\n  const handlePrev = () => {\r\n    const newIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length;\r\n    setCurrentTrackIndex(newIndex);\r\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newIndex = (currentTrackIndex + 1) % tracks.length;\r\n    setCurrentTrackIndex(newIndex);\r\n    setIsPlaying(true);\r\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n    setStatusMessage(isPlaying ? 'Paused' : `Playing: ${tracks[currentTrackIndex].title || tracks[currentTrackIndex].episodeTitle}`);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"controls\">\r\n        <ShuffleButton onShuffle={shuffleTracks} />\r\n        <PrevButton onPrev={handlePrev} />\r\n        <PlayPauseButton isPlaying={isPlaying} onTogglePlay={togglePlayPause} />\r\n        <NextButton onNext={handleNext} />\r\n      </div>\r\n      <Status statusMessage={statusMessage} />\r\n      <div className=\"playlist-grid\">\r\n      {tracks.map((track, index) => (\r\n        <div \r\n          key={index} \r\n          data-testid=\"track-title\"\r\n          className={`playlist-item ${currentTrackIndex === index ? 'active' : ''}`}\r\n          onDoubleClick={() => handleTrackDoubleClick(index)} \r\n  >\r\n          {track.artist ? (\r\n            <Song {...track} />\r\n          ) : (\r\n            <Podcast {...track} />\r\n          )}\r\n        </div>\r\n      ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}