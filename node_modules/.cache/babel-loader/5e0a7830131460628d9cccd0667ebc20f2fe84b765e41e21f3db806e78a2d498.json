{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\beat-box\\\\src\\\\Playlist.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Song from './Song';\nimport Podcast from './Podcast';\nimport Status from './Status';\nimport PlayPauseButton from './PlayPauseButton';\nimport PrevButton from './PrevButton';\nimport NextButton from './NextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [statusMessage, setStatusMessage] = useState('Paused');\n  useEffect(() => {\n    fetch('http://localhost:3001/tracks') //  URL to your JSON server \n    .then(response => response.json()).then(data => setTracks(data));\n  }, []);\n  const handleTrackDoubleClick = index => {\n    const selectedTrack = tracks[index];\n    setCurrentTrackIndex(index);\n    setIsPlaying(true);\n    const title = track.title || track.episodeTitle;\n    setStatusMessage(`Playing: ${title}`);\n  };\n  const shuffleTracks = () => {\n    setTracks(prevTracks => {\n      let shuffled = [...prevTracks];\n      for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n      }\n      return shuffled;\n    });\n    setCurrentTrackIndex(0);\n  };\n  const handlePrev = () => {\n    const newIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length;\n    setCurrentTrackIndex(newIndex);\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\n  };\n  const handleNext = () => {\n    const newIndex = (currentTrackIndex + 1) % tracks.length;\n    setCurrentTrackIndex(newIndex);\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\n    setIsPlaying(true);\n  };\n  const togglePlayPause = () => {\n    setIsPlaying(!isPlaying);\n    setStatusMessage(isPlaying ? 'Paused' : `Playing: ${tracks[currentTrackIndex].title || tracks[currentTrackIndex].episodeTitle}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shuffleTracks,\n        children: \"Shuffle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n        onPrev: handlePrev\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PlayPauseButton, {\n        isPlaying: isPlaying,\n        onTogglePlay: togglePlayPause\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onNext: handleNext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Status, {\n      statusMessage: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist\",\n      children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `track-item ${currentTrackIndex === index ? 'active' : ''}`,\n        onDoubleClick: () => handleTrackDoubleClick(index),\n        children: track.artist ? /*#__PURE__*/_jsxDEV(Song, {\n          ...track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Podcast, {\n          ...track\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist, \"IoNpJpVgHS2P6NG/KiLErNWsIXk=\");\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","useState","useEffect","Song","Podcast","Status","PlayPauseButton","PrevButton","NextButton","jsxDEV","_jsxDEV","Playlist","_s","tracks","setTracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","statusMessage","setStatusMessage","fetch","then","response","json","data","handleTrackDoubleClick","index","selectedTrack","title","track","episodeTitle","shuffleTracks","prevTracks","shuffled","i","length","j","Math","floor","random","handlePrev","newIndex","handleNext","togglePlayPause","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onPrev","onTogglePlay","onNext","map","onDoubleClick","artist","_c","$RefreshReg$"],"sources":["C:/Users/dell/Desktop/beat-box/src/Playlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Song from './Song'; \r\nimport Podcast from './Podcast'; \r\nimport Status from './Status';\r\nimport PlayPauseButton from './PlayPauseButton'; \r\nimport PrevButton from './PrevButton'; \r\nimport NextButton from './NextButton'; \r\n\r\nconst Playlist = () => {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0); \r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [statusMessage, setStatusMessage] = useState('Paused');\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:3001/tracks') //  URL to your JSON server \r\n      .then(response => response.json())\r\n      .then(data => setTracks(data));\r\n  }, []);\r\n\r\n  const handleTrackDoubleClick = (index) => {\r\n    const selectedTrack = tracks[index];\r\n    setCurrentTrackIndex(index);\r\n    setIsPlaying(true);\r\n    const title = track.title || track.episodeTitle; \r\n    setStatusMessage(`Playing: ${title}`);\r\n  };\r\n\r\n  const shuffleTracks = () => {\r\n    setTracks(prevTracks => {\r\n      let shuffled = [...prevTracks];\r\n      for (let i = shuffled.length - 1; i > 0; i--) {\r\n        const j = Math.floor(Math.random() * (i + 1));\r\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n      }\r\n      return shuffled;\r\n    });\r\n    setCurrentTrackIndex(0); \r\n  };\r\n\r\n  const handlePrev = () => {\r\n    const newIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length;\r\n    setCurrentTrackIndex(newIndex);\r\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newIndex = (currentTrackIndex + 1) % tracks.length;\r\n    setCurrentTrackIndex(newIndex);\r\n    setStatusMessage(`Playing: ${tracks[newIndex].title || tracks[newIndex].episodeTitle}`);\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const togglePlayPause = () => {\r\n    setIsPlaying(!isPlaying);\r\n    setStatusMessage(isPlaying ? 'Paused' : `Playing: ${tracks[currentTrackIndex].title || tracks[currentTrackIndex].episodeTitle}`);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"controls\">\r\n        <button onClick={shuffleTracks}>Shuffle</button>\r\n        <PrevButton onPrev={handlePrev} />\r\n        <PlayPauseButton isPlaying={isPlaying} onTogglePlay={togglePlayPause} />\r\n        <NextButton onNext={handleNext} />\r\n      </div>\r\n      <Status statusMessage={statusMessage} />\r\n      <div className=\"playlist\">\r\n      {tracks.map((track, index) => (\r\n          <div \r\n            key={index} \r\n            className={`track-item ${currentTrackIndex === index ? 'active' : ''}`}\r\n            onDoubleClick={() => handleTrackDoubleClick(index)} \r\n          >\r\n            {track.artist ? (\r\n              <Song {...track} />\r\n            ) : (\r\n              <Podcast {...track} />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}